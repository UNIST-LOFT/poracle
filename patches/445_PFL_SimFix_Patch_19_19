diff --git a/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java b/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java
index 67b368deb..0ec5f37c2 100644
--- Math35b/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java
+++ b/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java
@@ -47,8 +47,17 @@ public class ElitisticListPopulation extends ListPopulation {
     public ElitisticListPopulation(final List<Chromosome> chromosomes,
                                    final int populationLimit,
                                    final double elitismRate) {
+// start of generated patch
+super(chromosomes,populationLimit);
+if(elitismRate<0||elitismRate>1){
+throw new OutOfRangeException(LocalizedFormats.ELITISM_RATE,elitismRate,0,1);
+}
+this.elitismRate=elitismRate;
+// end of generated patch
+/* start of original code
         super(chromosomes, populationLimit);
         this.elitismRate = elitismRate;
+ end of original code*/
     }
 
     /**
@@ -61,8 +70,17 @@ public class ElitisticListPopulation extends ListPopulation {
      * @throws OutOfRangeException if the elitism rate is outside the [0, 1] range
      */
     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {
+// start of generated patch
+super(populationLimit);
+if(elitismRate<0||elitismRate>1){
+throw new OutOfRangeException(LocalizedFormats.ELITISM_RATE,elitismRate,0,1);
+}
+this.elitismRate=elitismRate;
+// end of generated patch
+/* start of original code
         super(populationLimit);
         this.elitismRate = elitismRate;
+ end of original code*/
     }
 
     /**
