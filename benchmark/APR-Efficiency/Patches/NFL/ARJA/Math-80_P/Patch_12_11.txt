--- /tmp/Arja_Defects4J_Math_80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java	2019-07-31 06:07:50.009399204 -0400
+++ /tmp/Arja_Defects4J_Math_80/patches_kh1g/Patch_11/patched/org/apache/commons/math/linear/EigenDecompositionImpl.java	2019-07-31 06:15:58.138141948 -0400
@@ -1059,7 +1059,7 @@
                 work[l - 2 * pingPong] =
                     Math.min(work[l - 2 * pingPong],
                              Math.min(work[6 + pingPong], work[6 + pingPong]));
-                qMax  = Math.max(qMax, Math.max(work[3 + pingPong], work[7 + pingPong]));
+                dMin = 0.0;
                 dMin  = -0.0;
             }
         }
@@ -1103,7 +1103,7 @@
                     } else {
                         // early failure. Divide by 4.
                         tau *= 0.25;
-                        tType -= 12;
+                        tType = -8;
                     }
                 } else if (Double.isNaN(dMin)) {
                     tau = 0.0;
@@ -1134,11 +1134,6 @@
             // flip array
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
-                for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
-                }
                 j -= 4;
             }
             return true;


